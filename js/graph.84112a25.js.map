{"version":3,"file":"js/graph.84112a25.js","mappings":"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","sources":["webpack://noosmilk/./src/views/GraphView.vue","webpack://noosmilk/./src/views/GraphView.vue?a269"],"sourcesContent":["<template>\n\n  <div id=\"graph\"  ref=\"graph\">Loading graph...</div>\n\n</template>\n\n<script>\nexport default {\n  name: 'GraphView',\n  data(){\n    return{\n      nodes: [],\n      links: []\n    }\n  },\n  mounted(){\n    this.$graphInit({domElement: this.$refs.graph})\n    this.updateUsers()\n    // this.users = this.$store.state.actor.users\n  },\n  methods:{\n    update(){\n      if (this.graph != undefined){\n        let nodes = this.nodes.map(a => {return {...a}})\n        let links = this.links.map(a => {return {...a}})\n        this.graph.graphData({nodes: nodes, links: links})\n        console.log(this.graph.graphData())\n      }\n    },\n    updateUsers(){\n      //  this.links = []\n      for (const [clientID, user] of Object.entries(this.users)) {\n        console.log('[user]',clientID,user);\n        // user\n        user.id = user.clientID\n        user.group = \"user\"\n        var indexU = this.nodes.findIndex(x => x.id==user.id);\n        indexU === -1 ? this.nodes.push(user) : Object.assign(this.nodes[indexU], user)\n        //  console.log(this.nodes)\n        // rooms\n        console.log(user.rooms)\n        for (const [id, room] of Object.entries(user.rooms)) {\n          room.id = id\n          room.name = id\n          room.group = \"room\"\n          var indexR = this.nodes.findIndex(x => x.id==room.id);\n          indexR === -1 ? this.nodes.push(room) : Object.assign(this.nodes[indexR], room)\n          // console.log(this.nodes)\n          let link = {source: user.id, target: room.id, group: \"visited\", label: \"visited\", color: 'blue'}\n          if (room.id == user.roomId){\n            link.group = \"current\"\n            link.label = \"current\"\n            link.color = \"red\"\n            console.log('#link',link)\n            //  Object.assign(this.nodes[user.roomId], {color: 'red', group: 'occuped'})\n          }\n          // else{\n          //   link.label = \"room\"\n          // }\n          //  console.log(link)\n          //  console.log('links before', this.links)\n          // this.links = this.links.filter(l => {return l.source == link.source && l.target == link.target})\n          var indexL = this.links.findIndex(l => l.source == link.source && l.target == link.target);\n          indexL === -1 ? this.links.push(link) : Object.assign(this.links[indexL], link)\n          // console.log('links after', this.links)\n          // this.links.push(link)\n        }\n\n      }\n      this.update()\n    }\n  },\n  watch:{\n    nodes(){\n      this.update()\n    },\n    links(){\n      this.update()\n    },\n    graph(){\n      this.update()\n    },\n    users(){\n      this.updateUsers()\n\n    },\n    usersUpdateDate(){\n      console.log(this.usersUpdateDate)\n      this.updateUsers()\n      this.$forceUpdate()\n    },\n    currentNode(){\n      console.log(this.currentNode)\n      let user = this.$store.state.actor.user\n      switch (this.currentNode.group) {\n        case \"room\":\n\n        user.roomId = this.currentNode.id\n        this.$store.commit('actor/setUser', user)\n        this.$openRoom()\n        break;\n        case \"user\":\n\n        break;\n        default:\n        console.log(\"i don't know what to do\")\n\n      }\n    }\n  },\n  computed: {\n    // nodes() {\n    //   return this.$store.state.network.nodes\n    // },\n    // links() {\n    //   return this.$store.state.network.links\n    // },\n    graph() {\n      return this.$store.state.network.graph\n    },\n    users: {\n      cache: false,\n      get() {\n        return this.$store.state.actor.users;\n      },\n    },\n    usersUpdateDate() {\n      return this.$store.state.actor.usersUpdated\n    },\n    uploads() {\n      return this.$store.state.web3.uploads\n    },\n    currentNode(){\n      return this.$store.state.network.currentNode\n    }\n  },\n\n}\n</script>\n\n<style lang=\"css\" scoped>\n.graph-view {\n\n}\n.node-label {\n  font-size: 12px;\n  padding: 1px 4px;\n  border-radius: 4px;\n  background-color: rgba(0,0,0,0.5);\n  user-select: none;\n}\n</style>\n","import { render } from \"./GraphView.vue?vue&type=template&id=2c4858ec&scoped=true\"\nimport script from \"./GraphView.vue?vue&type=script&lang=js\"\nexport * from \"./GraphView.vue?vue&type=script&lang=js\"\n\nimport \"./GraphView.vue?vue&type=style&index=0&id=2c4858ec&lang=css&scoped=true\"\n\nimport exportComponent from \"/home/smag/dev/noosmilk/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2c4858ec\"]])\n\nexport default __exports__"],"names":["id","ref","_createElementBlock","name","data","nodes","links","mounted","this","$graphInit","domElement","$refs","graph","updateUsers","methods","update","undefined","map","a","graphData","console","log","clientID","user","Object","entries","users","group","indexU","findIndex","x","push","assign","rooms","room","indexR","link","source","target","label","color","roomId","indexL","l","watch","usersUpdateDate","$forceUpdate","currentNode","$store","state","actor","commit","$openRoom","computed","network","cache","get","usersUpdated","uploads","web3","__exports__","render"],"sourceRoot":""}